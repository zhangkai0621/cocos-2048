{"version":3,"sources":["../../../../assets/scripts/assets/scripts/game.js"],"names":["ROWS","NUMBERS","INIT_NUMBERS","MIN_LENGTH","MOVE_DURATION","game","cc","Class","extends","Component","properties","scoreLabel","Label","score","blockPrefab","Prefab","gap","bg","Node","gameOverNode","start","drawBgBlocks","init","blockSize","winSize","width","x","y","positions","i","data","push","j","block","instantiate","height","addChild","setPosition","v2","getComponent","setNumber","active","updateScore","addEvents","blocks","length","destroy","addBlock","number","string","locations","getEmptyLocations","positionObject","Math","floor","random","position","afterMove","hasMoved","checkFail","gameOver","console","log","doMove","callback","action","moveTo","finish","callFunc","runAction","sequence","on","event","startPoint","getLocation","touchEnd","endPoint","vector","sub","mag","abs","moveBlock","direction","toMove","counter","move","prevRow","prevColumn","topIndex","toDirection","module","exports"],"mappings":"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","file":"game.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["/*\n * @Description: 场景开始脚本\n * @Author: zhangkai\n * @Date: 2020-01-17 10:40:15\n * @LastEditTime : 2020-01-19 14:11:26\n * @LastEditors  : zhangkai\n */\n\n const ROWS = 4; // 行数\n const NUMBERS = [2, 4]; // 初始化数字\n const INIT_NUMBERS = 3; // 初始化方块的个数\n const MIN_LENGTH = 50; // 最小的拖动距离\n const MOVE_DURATION = 0.1; // 移动耗时\n\nlet game = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        scoreLabel: cc.Label,\n        score: 0, // 分数\n        blockPrefab: cc.Prefab,\n        gap: 20, // 格子间隔\n        bg: cc.Node,\n        gameOverNode: cc.Node\n    },\n    // onLoad () {},\n\n    start () {\n        this.drawBgBlocks(); \n        this.init();\n    },\n    /**\n     * @description: 绘制方块\n     * @Author: zhangkai\n     * @Date: 2020-01-17 11:36:49\n     */\n    drawBgBlocks() {\n        this.blockSize = (cc.winSize.width - this.gap *  (ROWS + 1)) / ROWS; // 方块大小\n        let x = this.gap + this.blockSize / 2;\n        let y = this.blockSize;\n        this.positions = []; // 用于存储位置信息\n        for (let i = 0; i < ROWS; ++i) {\n            let data = [];\n            for (let i = 0; i < ROWS; i++) {\n                data.push(0);\n            }\n            this.positions.push(data);\n            for (let j = 0; j < ROWS; ++j) {\n                let block = cc.instantiate(this.blockPrefab);\n                // 设置方块大小\n                block.width = this.blockSize;\n                block.height = this.blockSize;\n                // 添加方块\n                this.bg.addChild(block);\n                block.setPosition(cc.v2(x, y));\n                this.positions[i][j] = cc.v2(x, y); // 记录位置信息\n                x += this.gap + this.blockSize;\n                block.getComponent('block').setNumber(0);\n            }\n            y += this.gap + this.blockSize;\n            x = this.gap + this.blockSize / 2; // 绘制完一行后，x 起点回到原位\n        }\n    },\n    /**\n     * @description: 初始化数据\n     * @Author: zhangkai\n     * @Date: 2020-01-17 11:37:15\n     */    \n    // \n    init() {\n        this.gameOverNode.active = false;\n        this.updateScore(0);\n        // 绑定事件\n        this.addEvents();\n        // 清空现有的块\n        if (this.blocks) {\n            for (let i = 0; i < this.blocks.length; ++i) {\n                for(let j = 0; j < this.blocks.length; ++j) {\n                    if (this.blocks[i][j] !== null) {\n                        this.blocks[i][j].destroy(); \n                    }\n                }\n            }\n        }\n        this.data = [];\n        this. blocks = [];\n        for (let i = 0; i < ROWS; ++i) {\n            this.blocks.push([null, null, null, null]); // 用来保存方块的信息, null 表示此位置方块为空\n            this.data.push([0, 0, 0, 0]); // 用来表示数字的信息\n        }\n        // 新建多个方块\n        for (let i = 0; i < INIT_NUMBERS; i++) {\n            this.addBlock();\n        }\n    },\n\n    /**\n     * @description: 更新分数\n     * @Author: zhangkai\n     * @Date: 2020-01-17 11:42:09\n     * @param : number 需要更新的分数\n     */    \n    updateScore(number) {\n        this.score = number;\n        this.scoreLabel.string = `分数：${number}`;\n    },\n    /**\n     * @description: 新建方块\n     * @Author: zhangkai\n     * @Date: 2020-01-17 14:22:57\n     */    \n    addBlock() {\n        let locations = this.getEmptyLocations();\n        if (!locations.length) { return false; }\n        let positionObject = locations[Math.floor(Math.random() * locations.length)] // 随机抽取空闲位置\n        let x = positionObject.x; // 第几行，由于坐标轴在左下角，由上至下递增\n        let y = positionObject.y; // 第几列，由左至右递增\n        let position = this.positions[x][y]; // 取出真正的坐标\n        let block = cc.instantiate(this.blockPrefab);\n        // 设置方块大小\n        block.width = this.blockSize;\n        block.height = this.blockSize;\n        // 添加方块\n        this.bg.addChild(block);\n        block.setPosition(position);\n        // 随机设置的数字\n        let number = NUMBERS[Math.floor(Math.random() * NUMBERS.length)];\n        block.getComponent('block').setNumber(number);\n        this.blocks[x][y] = block; \n        this.data[x][y] = number;\n        return true;\n    },\n\n    /**\n     * @description: 找出空闲的块\n     * @Author: zhangkai\n     * @Date: 2020-01-17 14:24:56\n     * @return 空闲块的位置数组\n     */    \n    getEmptyLocations() {\n        let locations = [];\n        for(let i = 0; i < this.blocks.length; ++i) {\n            for(let j = 0; j < this.blocks.length; ++j) {\n                if (this.blocks[i][j] === null) {\n                    locations.push({x: i, y: j});\n                }\n            }\n        }\n        return locations;\n    },\n    /**\n     * @description: 移动完成后\n     * @Author: zhangkai\n     * @Date: 2020-01-19 08:44:03\n     * @param : hasMoved 是否移动\n     */\n    afterMove(hasMoved) {\n        if (hasMoved) {\n            this.updateScore(this.score + 1);\n            this.addBlock();\n        }\n        if (this.checkFail()) {\n            this.gameOver();\n        }\n    },\n    \n    // 检查是否失败\n    checkFail() {\n        for (let i = 0; i < ROWS; i++) {\n            for (let j = 0; j < ROWS; j++) {\n                if (this.data[i][j] === 0) return false; // 是否数值全部填满\n                // 同一行或者列是否还可以合并\n                if (j > 0 && this.data[i][j] === this.data[i][j - 1]) return false; \n                if (j < ROWS - 1 && this.data[i][j] === this.data[i][j + 1]) return false;  // 横向\n\n                if (i < ROWS - 1 && this.data[i][j] === this.data[i + 1][j]) return false; \n                if (i > 0 && this.data[i][j] === this.data[i - 1][j]) return false; // 纵向\n            }\n        }\n        return true;\n    },\n    // 游戏结束函数\n    gameOver() {\n        console.log('game over');\n        this.gameOverNode.active = true;\n    },\n    /**\n     * @description: 移动方块\n     * @Author: zhangkai\n     * @Date: 2020-01-19 08:56:48\n     * @param : block 需要移动的块\n     * @param : position 需要到的位置\n     * @param : callback 移动完成后的回调函数\n     */\n    doMove(block, position, callback) {\n        let action = cc.moveTo(MOVE_DURATION, position);\n        let finish = cc.callFunc(() => {\n            callback && callback();\n        });\n        // 按顺序执行\n        block.runAction(cc.sequence(action, finish));\n    },\n    /**\n     * @description: 添加事件监听\n     * @Author: zhangkai\n     * @Date: 2020-01-17 16:10:23\n     * @param : \n     */    \n    addEvents() {\n        this.bg.on('touchstart', (event) => {\n            this.startPoint = event.getLocation();\n        });\n        this.bg.on('touchend', (event) => {\n            this.touchEnd(event);\n        });\n        this.bg.on('touchcancel', (event) => {\n            this.touchEnd(event);\n        });\n    },\n    // 拖动结束\n    touchEnd(event) {\n        this.endPoint = event.getLocation();\n        let vector = this.endPoint.sub(this.startPoint)// Sub() 返回两个向量的差\n        if (vector.mag() > MIN_LENGTH) {\n            // 水平方向\n            if (Math.abs(vector.x) > Math.abs(vector.y)) {\n                if (vector.x > 0) {\n                    this.moveBlock('RIGHT');\n                }\n                else {\n                    this.moveBlock('LEFT');\n                }\n            } // 垂直方向\n            else {\n                if (vector.y > 0) {\n                    this.moveBlock('UP');\n                }\n                else {\n                    this.moveBlock('DOWN');\n                }\n            }\n        }\n    },\n    /**\n     * @description: 滑动滑块\n     * @Author: zhangkai\n     * @Date: 2020-01-19 09:30:36\n     * @param : direction 方向\n     */\n    moveBlock(direction) {\n        let hasMoved = false;\n        let toMove = []; // 准备移动的数据\n        let counter = 0; // 计数是否完成\n        switch(direction) {\n            case 'RIGHT':\n                for (let i = 0; i < ROWS; i++) {\n                    for (let j = ROWS - 1; j >= 0; j--) {\n                        if (this.data[i][j] !== 0) {\n                            toMove.push({x: i, y: j}); // \n                        }\n                    }\n                }\n                break;\n            case 'UP':\n                for (let i = ROWS - 1; i >=0; i--) {\n                    for (let j = 0; j < ROWS; j++) {\n                        if (this.data[i][j] !== 0) {\n                            toMove.push({x: i, y: j}); // \n                        }\n                    }\n                }\n                break;\n            default:\n                for (let i = 0; i < ROWS; i++) {\n                    for (let j = 0; j < ROWS; j++) {\n                        if (this.data[i][j] !== 0) {\n                            toMove.push({x: i, y: j}); // \n                        }\n                    }\n                }\n                break;\n        }\n        // 移动操作\n        let move = (x, y, callback) => {\n            let prevRow = null, // 前一行\n            prevColumn = null, // 前一列\n            topIndex = 0, // 到顶的下标\n            toDirection = null; // 反向\n            switch(direction) {\n                case 'LEFT':\n                    prevRow = x;\n                    topIndex = 0;\n                    prevColumn = y - 1;\n                    toDirection = y; // 到顶的方向\n                    \n                    break;\n                case 'RIGHT':\n                    prevRow = x;\n                    topIndex = ROWS - 1;\n                    prevColumn = y + 1;\n                    toDirection = y; // 到顶的方向\n                    break;\n                case 'UP':\n                    prevRow = x + 1;\n                    topIndex = ROWS - 1;\n                    prevColumn = y;\n                    toDirection = x; // 到顶的方向\n                    break;\n                case 'DOWN':\n                    prevRow = x - 1;\n                    topIndex = 0;\n                    prevColumn = y;\n                    toDirection = x; // 到顶的方向\n                    break;\n                default:\n                    break;\n\n            }\n            // 移到顶结束\n            if (toDirection === topIndex || this.data[x][y] === 0) {\n                callback && callback();\n                return;\n            } // 移动\n            else if (this.data[prevRow][prevColumn] === 0) {\n                let block = this.blocks[x][y]; // 当前的方块\n                let position = this.positions[prevRow][prevColumn]; // 前一个方块的位置\n                this.blocks[prevRow][prevColumn] = block; // 后一个的方块赋值给前一个\n                this.data[prevRow][prevColumn] = this.data[x][y]; // 把后一个的数值赋值给前一个\n                this.data[x][y] = 0; // 移动完后当前数值置为 0 \n                this.blocks[x][y] = null; // 移动完后当前方块置为 null\n                this.doMove(block, position, () => {\n                    // 移动完成后下一轮移动\n                    move(prevRow, prevColumn, callback);\n                })\n                hasMoved = true;\n            } // 前一个数字与后一个数字相等合并\n            else if (this.data[prevRow][prevColumn] === this.data[x][y]) {\n                let block = this.blocks[x][y]; // 当前的方块\n                let position = this.positions[prevRow][prevColumn]; // 前一个方块的位置\n                this.data[prevRow][prevColumn] *= 2; // 两个方块数值合并\n                this.data[x][y] = 0; // 移动完后当前数值置为 0 \n                this.blocks[x][y] = null; // 移动完后当前方块置为 null\n                this.blocks[prevRow][prevColumn].getComponent('block').setNumber(this.data[prevRow][prevColumn]); // 设置前一个方块的数值\n                this.doMove(block, position, () => {\n                    // 移动完成后下一轮移动\n                    block.destroy();\n                    callback && callback();\n                })\n                hasMoved = true;\n            }\n            else {\n                callback && callback();\n                return;\n            }\n        };\n\n        for (let i = 0; i < toMove.length; i++) {\n            move(toMove[i].x, toMove[i].y, () => {\n                counter++;\n                if (counter === toMove.length) {\n                    this.afterMove(hasMoved);\n                }\n            })\n        }\n\n        \n    },\n});\n\nmodule.exports = game;\n"]}