{"version":3,"sources":["game.js"],"names":["ROWS","NUMBERS","INIT_NUMBERS","MIN_LENGTH","cc","Class","extends","Component","properties","scoreLabel","Label","score","blockPrefab","Prefab","gap","bg","Node","start","drawBgBlocks","init","blockSize","winSize","width","x","y","positions","i","push","j","block","instantiate","height","addChild","setPosition","v2","getComponent","setNumber","updateScore","addEvents","blocks","length","destroy","data","addBlock","number","string","locations","getEmptyLocations","positionObject","Math","floor","random","position","on","event","startPoint","getLocation","touchEnd","endPoint","vector","sub","mag","abs","moveRight","moveLeft","moveUp","moveDown","log","toMove"],"mappings":"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","file":"game.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["/*\n * @Description: 场景开始脚本\n * @Author: zhangkai\n * @Date: 2020-01-17 10:40:15\n * @LastEditTime : 2020-01-17 16:46:08\n * @LastEditors  : zhangkai\n */\n\n const ROWS = 4; // 行数\n const NUMBERS = [2, 4]; // 初始化数字\n const INIT_NUMBERS = 3; // 初始化方块的个数\n const MIN_LENGTH = 50; // 最小的拖动距离\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        scoreLabel: cc.Label,\n        score: 0, // 分数\n        blockPrefab: cc.Prefab,\n        gap: 20, // 格子间隔\n        bg: cc.Node,\n    },\n    // onLoad () {},\n\n    start () {\n        this.drawBgBlocks(); \n        this.init();\n    },\n    /**\n     * @description: 绘制方块\n     * @Author: zhangkai\n     * @Date: 2020-01-17 11:36:49\n     */\n    drawBgBlocks() {\n        this.blockSize = (cc.winSize.width - this.gap *  (ROWS + 1)) / ROWS; // 方块大小\n        let x = this.gap + this.blockSize / 2;\n        let y = this.blockSize;\n        this.positions = []; // 用于存储位置信息\n        for (let i = 0; i < ROWS; ++i) {\n            this.positions.push([0, 0, 0, 0]);\n            for (let j = 0; j < ROWS; ++j) {\n                let block = cc.instantiate(this.blockPrefab);\n                // 设置方块大小\n                block.width = this.blockSize;\n                block.height = this.blockSize;\n                // 添加方块\n                this.bg.addChild(block);\n                block.setPosition(cc.v2(x, y));\n                this.positions[i][j] = cc.v2(x, y); // 记录位置信息\n                x += this.gap + this.blockSize;\n                block.getComponent('block').setNumber(0);\n            }\n            y += this.gap + this.blockSize;\n            x = this.gap + this.blockSize / 2; // 绘制完一行后，x 起点回到原位\n        }\n    },\n    /**\n     * @description: 初始化数据\n     * @Author: zhangkai\n     * @Date: 2020-01-17 11:37:15\n     */    \n    // \n    init() {\n        this.updateScore(0);\n        // 绑定事件\n        this.addEvents();\n        // 清空现有的块\n        if (this.blocks) {\n            for (let i = 0; i < this.blocks.length; ++i) {\n                for(let j = 0; j < this.blocks.length; ++j) {\n                    if (this.blocks[i][j] !== null) {\n                        this.blocks[i][j].destroy(); \n                    }\n                }\n            }\n        }\n        this.data = [];\n        this. blocks = [];\n        for (let i = 0; i < ROWS; ++i) {\n            this.blocks.push([null, null, null, null]); // 用来保存方块的信息, null 表示此位置方块为空\n            this.data.push([0, 0, 0, 0]); // 用来表示数字的信息\n        }\n        // 新建多个方块\n        for (let i = 0; i < INIT_NUMBERS; i++) {\n            this.addBlock();\n        }\n    },\n\n    /**\n     * @description: 更新分数\n     * @Author: zhangkai\n     * @Date: 2020-01-17 11:42:09\n     * @param : number 需要更新的分数\n     */    \n    updateScore(number) {\n        this.score = number;\n        this.scoreLabel.string = `分数：${number}`;\n    },\n    /**\n     * @description: 新建方块\n     * @Author: zhangkai\n     * @Date: 2020-01-17 14:22:57\n     */    \n    addBlock() {\n        let locations = this.getEmptyLocations();\n        if (!locations.length) { return false; }\n        let positionObject = locations[Math.floor(Math.random() * locations.length)] // 随机抽取空闲位置\n        let x = positionObject.x; // 第几行，由于坐标轴在左下角，由上至下递增\n        let y = positionObject.y; // 第几列，由左至右递增\n        let position = this.positions[x][y]; // 取出真正的坐标\n        let block = cc.instantiate(this.blockPrefab);\n        // 设置方块大小\n        block.width = this.blockSize;\n        block.height = this.blockSize;\n        // 添加方块\n        this.bg.addChild(block);\n        block.setPosition(position);\n        // 随机设置的数字\n        let number = NUMBERS[Math.floor(Math.random() * NUMBERS.length)];\n        block.getComponent('block').setNumber(number);\n        this.blocks[x][y] = block; \n        this.data[x][y] = number;\n        return true;\n    },\n\n    /**\n     * @description: 找出空闲的块\n     * @Author: zhangkai\n     * @Date: 2020-01-17 14:24:56\n     * @return 空闲块的位置数组\n     */    \n    getEmptyLocations() {\n        let locations = [];\n        for(let i = 0; i < this.blocks.length; ++i) {\n            for(let j = 0; j < this.blocks.length; ++j) {\n                if (this.blocks[i][j] === null) {\n                    locations.push({x: i, y: j});\n                }\n            }\n        }\n        return locations;\n    },\n    /**\n     * @description: 添加事件监听\n     * @Author: zhangkai\n     * @Date: 2020-01-17 16:10:23\n     * @param : \n     */    \n    addEvents() {\n        this.bg.on('touchstart', (event) => {\n            this.startPoint = event.getLocation();\n        });\n        this.bg.on('touchend', (event) => {\n            this.touchEnd(event);\n        });\n        this.bg.on('touchcancel', (event) => {\n            this.touchEnd(event);\n        });\n    },\n    // 拖动结束\n    touchEnd(event) {\n        this.endPoint = event.getLocation();\n        let vector = this.endPoint.sub(this.startPoint)// Sub() 返回两个向量的差\n        if (vector.mag() > MIN_LENGTH) {\n            // 水平方向\n            if (Math.abs(vector.x) > Math.abs(vector.y)) {\n                if (vector.x > 0) {\n                    this.moveRight();\n                }\n                else {\n                    this.moveLeft();\n                }\n            } // 垂直方向\n            else {\n                if (vector.y > 0) {\n                    this.moveUp();\n                }\n                else {\n                    this.moveDown();\n                }\n            }\n        }\n    },\n    // 右滑\n    moveRight() {\n        cc.log('right');\n    },\n    // 左滑\n    moveLeft() {\n        cc.log('left');\n\n        let toMove = [];\n        for (let i = 0; i < ROWS; i++) {\n            for (let j = 0; j < ROWS; j++) {\n                if (this.data[i][j] !== 0) {\n                    toMove.push({x: i, y: j}); // \n                }\n            }\n        }\n    },\n    // 上滑\n    moveUp() {\n        cc.log('up');\n    },\n    // 下滑\n    moveDown() {\n        cc.log('down');\n    },\n});\n"]}